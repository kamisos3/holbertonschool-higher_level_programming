>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix
[[1, 2, 3], [4, 5, 6]]

>>> matrix_divided([[1.5, 2.8, 3.3], [4.2, 5.5, 6.8]], 2)
[[0.75, 1.4, 1.65], [2.1, 2.75, 3.4]]

>>> matrix_divided([[10, 20], [30, 40]], 2)
[[5.0, 10.0], [15.0, 20.0]]

>>> matrix_divided([[100]], 10)
[[10.0]]

>>> matrix_divided([[-6, -12], [-18, -24]], -3)
[[2.0, 4.0], [6.0, 8.0]]

>>> matrix_divided([[1, 2], [3, 4]], 1)
[[1.0, 2.0], [3.0, 4.0]]

>>> matrix_divided([[0, 0], [0, 0]], 5)
[[0.0, 0.0], [0.0, 0.0]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0.5)
[[2.0, 4.0, 6.0], [8.0, 10.0, 12.0]]

>>> matrix_divided("not a matrix", 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2], [3, "4"]], 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2], [3, 4, 5]], 1)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([1, 2, 3], 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2], [3, 4]], "div")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2], [3, 4]], [1, 2])
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([], 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[]], 1)
[[]]
